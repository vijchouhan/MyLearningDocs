Date 21 Feb 2018, 
GIT Learinig :- This is my first git basic learning
*******************************************************************************************************************
Repository:-

https://github.com/vijchouhan/MyApplication.git

https://github.com/vijchouhan/LocalRepo.git




*******************************************************************************************************************
************************************************** Question 1 *****************************************************
*******************************************************************************************************************
Below are the steps to push project into Git 
================
step 1:- create repositoty on git after registered with it...

step 2:- create local folder as  D:/SelfLearning/MyRepo/MyApplication and copy your project 'MySpringCoreApp' inside this 

step 3:- open git bash console here and see status type command:- git status , you will see copied project here  

step 4:- now add entire project into git repository command :- git add .

step 5:- now commit the project into your repository command:- git commit -m "your commit message"

step 6:- now push your project into respository command:- $ git push origin master

Now your project commited to repository you can see while openin git on brower.... below are the logs from git console........

-------------------------

"user name" MINGW64 /d/SelfLearning/MyRepo/MyApplication (master)
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        MySpringCoreApp/

nothing added to commit but untracked files present (use "git add" to track)

"user name" MINGW64 /d/SelfLearning/MyRepo/MyApplication (master)
$ git add .

"user name" MINGW64 /d/SelfLearning/MyRepo/MyApplication (master)
$ git commit -m "Test my app"
[master 8064a11] Test my app
 Committer: = <VI297398@wipro.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 8 files changed, 134 insertions(+)
 create mode 100644 MySpringCoreApp/.classpath
 create mode 100644 MySpringCoreApp/.project
 create mode 100644 MySpringCoreApp/bin/Beans.xml
 create mode 100644 MySpringCoreApp/bin/com/tutorialspoint/HelloWorld.class
 create mode 100644 MySpringCoreApp/bin/com/tutorialspoint/MainApp.class
 create mode 100644 MySpringCoreApp/src/Beans.xml
 create mode 100644 MySpringCoreApp/src/com/tutorialspoint/HelloWorld.java
 create mode 100644 MySpringCoreApp/src/com/tutorialspoint/MainApp.java

"user name" MINGW64 /d/SelfLearning/MyRepo/MyApplication (master)
$ git push origin master
fatal: HttpRequestException encountered.
   An error occurred while sending the request.
Username for 'https://github.com': vijchouhan
Counting objects: 16, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (14/14), done.
Writing objects: 100% (16/16), 3.18 KiB | 0 bytes/s, done.
Total 16 (delta 0), reused 0 (delta 0)
To https://github.com/vijchouhan/MyApplication.git
   31b1763..8064a11  master -> master

"user name" MINGW64 /d/SelfLearning/MyRepo/MyApplication (master)
$




*******************************************************************************************************************
***************************************************Question 2 *************************************************
*******************************************************************************************************************

How to add new file:- 

create file in your local working copy in any location and then add this file to remote repository ad folling command

1. open gitbash console and first go to the directory where file created...

2. git add 'file name'

3. git commit -m "your commit message"

4. git push origin master 

5. it's done you can see your file on repository......... 

6. below are the console log for the same activity you done on above steps 1 to 4.... 

-----------------
"user name" MINGW64 /d/SelfLearning/MyRepo/MyApplication/MySpringCoreApp/src/com/tutorialspoint (master)
$ git add LearningGit.txt

"user name" MINGW64 /d/SelfLearning/MyRepo/MyApplication/MySpringCoreApp/src/com/tutorialspoint (master)
$ git commit -m "added new txt file as note on git"
[master 9855007] added new txt file as note on git
 Committer: = <VI297398@wipro.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 82 insertions(+)
 create mode 100644 MySpringCoreApp/src/com/tutorialspoint/LearningGit.txt

"user name" MINGW64 /d/SelfLearning/MyRepo/MyApplication/MySpringCoreApp/src/com/tutorialspoint (master)
$ git push origin master
fatal: HttpRequestException encountered.
   An error occurred while sending the request.
Username for 'https://github.com': vijchouhan
Counting objects: 7, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (7/7), 1.78 KiB | 0 bytes/s, done.
Total 7 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/vijchouhan/MyApplication.git
   8064a11..9855007  master -> master

"user name" MINGW64 /d/SelfLearning/MyRepo/MyApplication/MySpringCoreApp/src/com/tutorialspoint (master)
$ ls
HelloWorld.java  LearningGit.txt  MainApp.java

"user name" MINGW64 /d/SelfLearning/MyRepo/MyApplication/MySpringCoreApp/src/com/tutorialspoint (master)
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working tree clean

"user name" MINGW64 /d/SelfLearning/MyRepo/MyApplication/MySpringCoreApp/src/com/tutorialspoint (master)



*******************************************************************************************************************
**************************************************** Question 3 **************************************************
*******************************************************************************************************************
How to import project in eclipse that is newly created repository, make repository as a project and import in eclipse

1. create repository in login with Git hub,
2. go to workspace and open "git bash here" console and clone the created repository
3. go to inside the created directory and paste here the entire content of the created project with same name in eclpse. later on delete the eclipse project 
4. now import this project in eclipse
5. through eclipse execute command like :-
(a) team >> add to index (similar to "git add . " in git console
(b) team >> commit (commit with messame) similar to "git commit -m "your messame""
(c) team >> Push to Upstream (similar to git push origing master command)
(d) to get updated use Team >> Push from Upstream

5. its done now....


*******************************************************************************************************************
**************************************************** Question 4 **************************************************
*******************************************************************************************************************
The above "Question 3" can be also done in below 4 steps .... 

1. create repository in githug browser name "SpringBootMavenSpringMvc"
2. go to local work space and open 'git bash here'... clone the repository "SpringBootMavenSpringMvc" here, a repository folder gets copied here with same name as "SpringBootMavenSpringMvc"...
3. create project with same name as "SpringBootMavenSpringMvc"
4. From eclipse itself execute command as a) add to index, b) commit c) push to upstream ... all contents gets committed in your master repository


*******************************************************************************************************************
**************************************************** Question 5 **************************************************
*******************************************************************************************************************
1. how to git add only java file from the root directory of the project, below is the command for the same

git add \./\*.java

----------------------- below is the logs--------------start-----
username--- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   pom.xml
        modified:   src/main/java/com/springboot/MainApp.java
        modified:   src/main/java/com/springboot/controller/HelloController.java

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        src/main/resources/log4j2.xml

no changes added to commit (use "git add" and/or "git commit -a")

username--- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git add \./\*.java

username--- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   src/main/java/com/springboot/MainApp.java
        modified:   src/main/java/com/springboot/controller/HelloController.java

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   pom.xml

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        src/main/resources/log4j2.xml
-------------------------------------------------end----------------------

2. how to commit added above java files from the root directory of the project

$ git commit -m "added only java changes"

-----------------------------------------------log-----------------------------start
username--- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git commit -m "added only java changes"
[master 7170b89] added only java changes
 2 files changed, 14 insertions(+), 3 deletions(-)

username--- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   pom.xml

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        src/main/resources/log4j2.xml

no changes added to commit (use "git add" and/or "git commit -a")

-----------------------------------------------log-----------------------------end

3. similarily git add only .xml file from the root directory of the project

$ git add \./\*.xml

------------------------------log---------------------start---------------
username--- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git add \./\*.xml

username--- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   pom.xml
        new file:   src/main/resources/log4j2.xml
------------------------------log---------------------end---------------

4. Commited changed files, here only .xml

$ git commit -m "added only .xml changes"

username--- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git commit -m "added only .xml changes"
[master 50553fa] added only .xml changes
 2 files changed, 86 insertions(+), 27 deletions(-)
 create mode 100644 src/main/resources/log4j2.xml

username--- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use "git push" to publish your local commits)
nothing to commit, working tree clean

username---- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)


5. If you get below access error, use the command ($ git config --global user.name = "vijchouhan") .....

$ git config --global user.name = "vijchouhan"

--------------------log file-----------------------start----------
username---- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git push origin master
fatal: unable to access 'https://github.com/vijchouhan/SpringBootMavenSpringMvc.git/': Unknown SSL protocol error in connection to github.com:443

username---- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git config --global user.name = "vijchouhan"
--------------------log file-----------------------end-------------

6. Command to git push 
$ git push origin master

------------log---------------start--------
username---- MINGW64 /d/MyApplication/WORKSPACE/SpringBootMavenSpringMvc (master)
$ git push origin master
fatal: HttpRequestException encountered.
   An error occurred while sending the request.
Username for 'https://github.com': vijchouhan
Counting objects: 17, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (12/12), done.
Writing objects: 100% (17/17), 2.46 KiB | 0 bytes/s, done.
Total 17 (delta 3), reused 0 (delta 0)
remote: Resolving deltas: 100% (3/3), completed with 3 local objects.
To https://github.com/vijchouhan/SpringBootMavenSpringMvc.git
   75c315f..50553fa  master -> master
------------log---------------end--------

7. Similar add only .txt file, below is the command.....

$ git add \./\*.txt


*******************************************************************************************************************
**************************************************** Question 6 **************************************************
*******************************************************************************************************************
Git Commit commands..........

$ git commit --hep
error: unknown option `hep'
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)

********************************************************************************************************************
COMMANDS:

1. single command for create folder and git clone developer repository branch into that folder

Syntax: $ git clone <--branch> <branch name> <repository> <name of folder that you want to create>

$ git clone -b developer http://<server-ip>/contract-intelligence/lease-extraction/commonusermanagement.git CommonUserManagement


