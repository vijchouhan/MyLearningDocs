*********************************************************************************************
*********************************************************************************************
					STRICTLY TO BE FOLLOWED :- SLEEPING TIME 12:30 PM TO 8:30 AM 
											:- WALK UP AT 8:30 AM DAILY
					STUDY TIME @ HOME 10:30 PM TO 12:30 PM DAILY
	
					
*********************************************************************************************
*********************************************************************************************
	  
INTERVIEW WILL START FROM 09-FEB-2019

JANUANRY : 30,	31,	
FEBRUARY : 1,	2,	3,	4,	5,	6,	7,	8
		
=========================Before Interview===========================
--------------------------------------------------------------------

1.	Docker Basic		---- repeat 		Status: DONE, repeat again [video tutorial edureka]

2.	JUnit				---- repeat 		Status: DONE, repeat again [tutorial points]

3.	MicroService Basic Architecture			Status: DONE, epeat again  [video tutorial edureka]

4.	Alige				---- repeat  		Status: DONE, repeat again	[tutorial points]

5.	Git 				---- repeat 		Status: DONE, repeat again  [video tutorial edureka]

7.	Memory Management	---- repeat 		Status: DONE, repeat again	 [video tutorial ]

24. JVM Architecture 	---- repeat 		Status: DONE, repeat again	 [video tutorial ]
		
9.	Spring framework:- 	----- repeat		Status: DONE, repeat again	 [video tutorial ]

10.	Spring Boot:-		----- repeat		Status: DONE, repeat again	 [video tutorial ]		

12.	Design Principle 	----- repeat		Status: DONE, repeat again   [my PPT file]

13.	Design Patterns		----- repeat		Status: DONE, repeat again also read new one  [my PPT file, tutorial points]

Basic idia:- 
------------
	6.	Cloud Computing		---- repeat 		Status: DONE, need to repeat again  [Important URLs.txt use point no 5 links]

	20. Spring Security		---- repeat 		Status: DONE, need to repeat again	  [video tutorial ]
	
	26. Gradle Basic		---- repeat 		Status: DONE, need to repeat again	[some urls]
--------------------------------------------------------------------REPEAT TOPIC-------------------------------start---

18.	Core Java:- 5, 7, 8, 9 ---			repeat [my notes and tutorial points]			------>>> 		
	
19.	Java 8 newly added features - 		repeat											------>>> 				
		Lamda,				----->>   [java brain video]  --- Status: DONE, need to repeat again
		Functional Programing ----->> [java brain video]  --- Status: DONE, need to repeat again
		Stream Api ---->>             [some imp urls] 	  --- Status: DONE, need to repeat again
		Time and Date Api ---->>      [some imp urls] 	  --- Status: DONE, need to repeat again	
		Concurreny Collection ---->>  [some imp urls]
		Collection API
		MultiThreading
		Basic Concepts (Exceptions, io, OOPS, Overloading, Overriding, Serializations, Generics )	

11.	Restful WebService				  repeat	[tutorial points and java brain video] 	------>>> 	

--------------------------------------------------------------------REPEAT TOPIC-------------------------------end----

8.	Spring Data Rest:-	---- for DOCS --------------- 										
	https://docs.spring.io/spring-data/rest/docs/current/reference/html/

25. Spring MVC 							 repeat		====>>

14.	Oracle DataBase						 repeat		====>> [SOME URLs]

17.	Hibernante 							repeat [tutorial pounts and video]

15.	Maven								 repeat [java brain video]

21.	Jenkins				---- NEW	 	 ====>> [SOME URLs]

22.	JIRA				---- NEW		 ====>> [SOME URLs]

23. LDAP 				---- NEW		 ====>> [SOME URLs]

16.	Mongo DabaBase		---- NEW	 	 ====>> [SOME URLs]

=========================After Interview start===========================

Soap WebService
Angular 
AWS
CICD
Spring Batch
Spring Integration
Spring Cloud
Spring AOP
DevOps concept 
DevOps advantages over agile
Swagger
RabbitMq
performance improvement of existing application
How to optimize code.
Effort Estimation and Track progress-- any tool
When you will choose Rest and when SOAP.
CSRF
ssl
Caching/Load Balancer
Technologies selection for new project
Which cloud you will prefer and why ( Criteria )
UML diagram
technical design document
Functional Document
Perfromance Testing



